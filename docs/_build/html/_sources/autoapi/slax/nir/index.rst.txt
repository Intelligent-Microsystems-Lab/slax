slax.nir
========

.. py:module:: slax.nir

.. autoapi-nested-parse::

   Neuromorphic Intermediate Representation (NIR) module for Slax



Classes
-------

.. autoapisummary::

   slax.nir.LIF


Package Contents
----------------

.. py:class:: LIF(size=1, init_tau=2.0, spike_fn=fast_sigmoid(), v_threshold=1.0, v_reset=0.0, subtraction_reset=True, train_tau=False, carry_init=jnp.zeros, stop_du_ds=False, output_Vmem=False, no_reset=False, dtype=jnp.float32)

   Bases: :py:obj:`slax.model.utils.Neuron`


   A module for the Leaky Integrate-and-Fire neuron.

   Args:
   shape: The input shape as an integer or tuple
   init_tau: A float or array for the initial leak parameter, which is calculated as sigmoid(init_tau)
   spike_fn: The surrogate spike function, such as fast sigmoid, used in place Heaviside step function
   v_threshold: The membrane potential threshold for spiking. Defaults to 1.0
   v_reset: If the neuron uses a hard reset rather than subtraction-based reset after a spike, the membrane potential returns
   to this value. Defaults to 0.0
   subtraction_reset: Whether the neuron subtracts "1." from the membrane potential after a spike or resets to v_reset.
   Defaults to True
   trainable_tau: Whether the leak parameter is learnable parameter. Defaults to False
   carry_init: Initializer for the carry state
   dtype: Data type of the membrane potential. This only matters if you use "initialize_carry". Defaults to float32


